@mixin fontSize($fontSize, $line-height: 1) {
  font-size: $fontSize;
  font-size: ($fontSize/$fontsize_std) * 1rem;
  line-height: $line-height;
}
@mixin size($width, $height) {
  width: $width;
  height: $height;
}
// tranforms ===============
@mixin transform($tranforms) {
  -webkit-transform: $tranforms;
  -ms-transform: $tranforms;
  -o-transform: $tranforms;
  transform: $tranforms;
}
@mixin transform-origin($origin) {
  -webkit-transform-origin: $origin;
  -ms-transform-origin: $origin;
  -o-transform-origin: $origin;
  transform-origin: $origin;
}
@mixin translate($x, $y) {
  @include transform(translate($x, $y));
}
@mixin scale($scale) {
  @include transform(scale($scale));
}

// Transition ===============
@mixin transition($args...) {
  -webkit-transition: $args;
  -o-transition: $args;
  transition: $args;
}
// Before_After
@mixin before_after_base() {
  content: "";
  position: absolute;
}

// position ==============
@mixin tl($t, $l) {
  top: $t;
  left: $l;
}
@mixin tr($t, $r) {
  top: $t;
  right: $r;
}
@mixin br($b, $r) {
  bottom: $b;
  right: $r;
}
@mixin bl($b, $l) {
  bottom: $b;
  left: $l;
}
//  Media Queries ==================
@mixin rwd($breakpoint) {
  @if $breakpoint == small {
    @media (min-width: $breakpoint_sm) {
      @content;
    }
    @if $breakpoint == medium {
      @media (min-width: $breakpoint_md) {
        @content;
      }
    }
    @if $breakpoint == large {
      @media (min-width: $breakpoint_lg) {
        @content;
      }
    }
  }
}
// for Media columns size ====================
@mixin columns($width, $float) {
  display: block;
  width: $width;
  float: $float;
}
